
//www.elegoo.com
//2016.09.23

#include <IRremote.h>
int receiverpin = 12;
int in1=6;
int in2=7;
int in3=8;
int in4=9;
int ENA=5;
int ENB=11;
int ABS=100;
int ABT=75;
unsigned long RED;
#define A 16736925 //forward arrow

#define B 16754775 //back arrow

#define X 16712445 //ok button

#define C 16720605 //left arrow

#define D 16761405 //right arrow
// defines the codes for buttons 1-3 on the remote
/*#define E [Code] //Low speed

#define F [Code] // medium speed

#define G [Code] // high speed
*/
IRrecv irrecv(receiverpin);
decode_results results;

void _mForward()
{ 
  analogWrite(ENA,ABT);
  analogWrite(ENB,ABT);
  digitalWrite(in1,HIGH);//digital output
  digitalWrite(in2,LOW);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
  Serial.println("go forward!");
}
void _mBack()
{
  analogWrite(ENA,ABT);
  analogWrite(ENB,ABT);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,HIGH);
  digitalWrite(in4,LOW);
  Serial.println("go back!");
}
void _mleft()
{
  analogWrite(ENA,ABS);
  analogWrite(ENB,ABS);
  digitalWrite(in1,HIGH);
  digitalWrite(in2,LOW);
  digitalWrite(in3,HIGH);
  digitalWrite(in4,LOW); 
  Serial.println("go left!");
}
void _mright()
{
  analogWrite(ENA,ABS);
  analogWrite(ENB,ABS);
  digitalWrite(in1,LOW);
  digitalWrite(in2,HIGH);
  digitalWrite(in3,LOW);
  digitalWrite(in4,HIGH);
  Serial.println("go right!");
}
void _mStop()
{
  digitalWrite(ENA,LOW);
  digitalWrite(ENB,LOW);
  Serial.println("STOP!");  
}
void setup() {
  // put your setup code here, to run once:
  pinMode(in1,OUTPUT);
  pinMode(in2,OUTPUT);
  pinMode(in3,OUTPUT);
  pinMode(in4,OUTPUT);
  pinMode(ENA,OUTPUT);
  pinMode(ENB,OUTPUT);
  pinMode(receiverpin,INPUT);
  Serial.begin(9600);
  _mStop();
  irrecv.enableIRIn();
}
void _low()
{
  ABT==125;
}
void _med()
{
  ABT==150;
}
void _high()
{
  ABT==175;
}
// removed do to apparent lack of use and errors
/*void loop () 
{
 Serial.println(receiverpin); // pulls remote code from serial 
}
*/
void loop() 
{
  if (irrecv.decode(&results)) // checks for a signal
    {
      RED=results.value; //stores value in RED variable
       Serial.println(RED);
       irrecv.resume();
    delay(150); // delay between signal checks
    }
   //forward 
    if(RED==A)
  {  
     _mForward();
  }
// back
  else if(RED==B)
  {
        _mBack();
  }
// left
  else if(RED==C)
  {
        _mleft();
  }
// right
  else if(RED==D)
  {
        _mright();
   }
// stop
  else if(RED==X)
  { 
         _mStop();
   }
 
 // Adds speed options
 /* else if(RED==E)
  { 
         _low();
   }
   else if(RED==F)
  { 
         _med();
   }
   else if(RED==G)
  { 
         _high();
   }*/
}

